name: dse
version: 1.0.0
fra_formatVersion: 1
inputs:
  dse-host-count:
    type: integer
    title: Number of DSE hosts
    default: 4
resources:
  aap_api:
    type: Custom.my_custom_resource
    dependsOn:
      - dse_vm
    properties:
      hosts:
        - ${resource.dse_vm.*}
      base_url: ${propgroup.aap_2.aap_url}
      password: ${propgroup.aap_2.aap_password}
      username: ${propgroup.aap_2.aap_user}
      ssl_verify: false
      verbose: true
      organization_name: Default
      inventory_name: ${env.deploymentId}
      inventory_variables:
        use_ssl: true
      group_variables:
        dse:
          color: blue
          enabled: true
      host_variables:
        dse_vm:
          rack: 1
          verbose: true
      host_groups:
        dse:
          - ${resource.dse_vm.*}
      job_template_name: DSE Template
  dse_vm:
    type: Cloud.vSphere.Machine
    properties:
      name: ${self.resourceName}
      tags:
        - key: application
          value: dse
      count: ${input.dse-host-count}
      image: test-image
      customizeGuestOs: true
      cpuCount: 4
      totalMemoryMB: 16384
      remoteAccess:
        authentication: publicPrivateKey
        sshKey: ${secret.jumphost-public-key}
        username: crdb
      networks:
        - name: ${prod_net.name}
          network: ${resource.prod_net.id}
          assignment: static
      cloudConfigSettings:
        deploymentFailOnCloudConfigRuntimeError: true
      cloudConfig: |
        #cloud-config
        users:
          - name: crdb
            shell: /bin/bash
            sudo: ['ALL=(ALL) NOPASSWD:ALL']  
        ssh_pwauth: true
        runcmd:
          - hostnamectl set-hostname --pretty ${self.resourceName}
      attachedDisks: []
      storage: {}
  prod_net:
    type: Cloud.Network
    properties:
      name: ls-prod
      networkType: public
      constraints:
        - tag: segment_name:ls-prod
